1. Shell: Viết script tính tổng S = 1 + ½ + 1/3 + ¼ + ... + 1/n (n nguyên, nhập từ bàn phím)

clear
echo "n="
read n
i=1
s=0
while [ $i -le $n ]
do
  x=$(echo "scale=4; 1 / $i" | bc)
  s=$(echo "scale=4; $s + $x" | bc)
  i=`expr $i + 1`
done
echo "tong la: $s"

=====================================================

2. Viết Script tính tổng các số lẻ từ 1-n (n nguyên, nhập từ bàn phím)

clear
echo "n="
read n
i=1
tong=0
while [ $i -lt $n ]
do
  if [ `expr $i % 2` -ne 0 ]; then
      tong=`expr $tong + $i`
  fi
  i=`expr $i + 1`
done
echo "tong la: $tong"

=========================================================

3. Viết Script giải hệ phương trình bậc nhất 2 ẩn.

hpt(){
          D=$(echo "scale=3; $1 * $5 - $2 * $4" | bc)
          Dx=$(echo "scale=3; $3 * $5 - $2 * $6" | bc)
          Dy=$(echo "scale=3; $1 * $6 - $3 * $4" | bc)
          if [ $D -ne 0 ];then
                   x1=$(echo "scale=3; $Dx/$D" | bc)
                   x2=$(echo "scale=3; $Dy/$D" | bc)
                   echo "Phuong trinh co nghiem duy nhat: x = ($x1,$x2)."
          elif [ $D -eq 0 ] && [ $Dx -eq 0 ] && [ $Dy -eq 0 ];then
                   echo "Phuong trinh vo so nghiem"
          else
                   echo "Phuong trinh vo nghiem"
          fi
}

hpt $1 $2 $3 $4 $5 $6

========================================================

4. Viết script in ra chuỗi đảo ngược từ chuỗi ban đầu.

clear
echo -e -n "Nhap chuoi:\t"
read sau
h=${#sau}
until [ $h -le 0 ]
do     
          echo -n `expr substr $sau $h 1`
          h=$(($h - 1))
done
echo -e "\n"

========================================================

5. Viết script tính tổng các chữ số của 1 số nguyên được nhập vào từ bàn phím.

clear
t=1
while [ $t -eq 1 ]
do
          clear
          echo -e -n "Nhap so:\t"
          read so

          if [ ${#so} -eq 3 ]; then
                   a=$(($so % 10))
                   b=$((($so / 10) % 10))
                   c=$((($so / 100) % 10))
                   echo -en "Tong cac ky so la: `expr $a + $b + $c`"
          else
                   echo -en "\nNhap so trong pham vi tu 100 -> 999."
          fi
         
          while [ $t -ne 0 ]
          do
                   echo -en "\nBan co muon tiep tuc? (Nhap 0 hoac 1)\t"
                   read t
                   if [ $t -eq 1 ];then
                             break
                   fi
          done
done


=================================================

6. Viết chương trình Shell vẽ hình tam giác cân

#!/bin/sh
echo "Chuong trinh ve hinh tam gia can dat"
height=$1
ktrang=$1
for ((i=1;i<=height;i++))
do
          for ((kt=ktrang; kt>=1; kt--))
          do
                   echo -n " "
          done

          for ((j=1; j<=i; j++))
          do
                   echo -n "* "
          done
          ktrang=$(($ktrang-1))
          echo ""       
done
echo "The end"

exit 0

===================================================

7. KT Chính Phương

#!/bin/bash

echo -n "Nhap n= "

read n


a=0
for ((i=0;i<n;i++))

do

	b=$(echo "$i*$i" | bc) # thử thế này xem ((b=$i*$i))

	if [ $n -eq $b ];

		then

			a=1
                        break 1

		#else

			#a=0

	fi

done

	if [ $a -eq 1 ];

		then

			echo "$n la so chinh phuong"

		else

			echo "$n la so chinh phuong"

	fi
exit 0

============================================================

8. Tìm ước chung lớn nhất
main()
{
      int a,b,i;
      printf("a=");
      scanf("%d", &a);
      printf("b=");
      scanf("%d", &b);
      if(a<b)
      for(i=a;i>=1;i--)
         if(a%i==0&&b%i==0)
         {
         printf("UCLN la %d", i);
         break;
         }
      if(b<a)
      for(i=b;i>=1;i--)
         if(a%i==0&&b%i==0)
         {
         printf("UCLN la %d", i);
         break;
         }
         getch();
         return 0;
}

int main()
{
 
    int a, b,c;
   
    //input value of a
    printf("a = ");
    scanf("%d",&a);
 
        //input value of b
    printf("b = ");
    scanf("%d",&b);
   
 
    while((c = (a%b)) != 0)
    {
        a = b;
            b = c;
    }
 
    printf("UCLN = %d",b);
    getch();
    return 0;
}
